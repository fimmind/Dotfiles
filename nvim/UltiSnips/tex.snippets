global !p
def math():
	return vim.eval("vimtex#syntax#in_mathzone()") == "1"
endglobal

################
# Environments #
################

snippet beg "begin{} / end{}" bA
\\begin{${1:environment}}$2
	${0:${VISUAL}}
\\end{$1}
endsnippet

snippet enum "Enumerate" b
\begin{enumerate}
	\item ${0:${VISUAL}}
\end{enumerate}
endsnippet

snippet enumru "Cirilic letters enumerate" b
	\begin{enumerate}[label=\asbuk*)]
		\item ${0:${VISUAL}}
	\end{enumerate}
endsnippet

snippet item "Itemize" b
\begin{itemize}
	\item ${0:${VISUAL}}
\end{itemize}
endsnippet

snippet desc "Description" b
\begin{description}
	\item[$1] ${0:${VISUAL}}
\end{description}
endsnippet

snippet mat "Smart Matrix"
\begin{${1:p/b/v/V/B/small}matrix}
	${0:${VISUAL}}
\end{$1matrix}
endsnippet

context "math()"
snippet pmat "pmatrix environment" wA
\begin{pmatrix}
	${1:${VISUAL}}
\end{pmatrix}
$0
endsnippet

context "math()"
snippet bmat "bmatrix environment" wA
\begin{bmatrix}
	${1:${VISUAL}}
\end{bmatrix}
$0
endsnippet

priority 1
context "not math()"
snippet mk "Inline math" wA
\( ${1:${VISUAL}} \) $0
endsnippet

context "not math()"
snippet mK "math" wA
\[
	${1:${VISUAL}}
\]$0
endsnippet

context "not math()"
snippet eq "Equation" b
\begin{equation}
	\label{eq:$1}
	${0:${VISUAL}}
\end{equation}
endsnippet

context "not math()"
snippet eqnn "Equation without number" bA
\begin{equation*}
	${0:${VISUAL}}
\end{equation*}
endsnippet

context "math()"
snippet align "Align" bA
\begin{aligned}
	${1:${VISUAL}}
\end{aligned}
$0
endsnippet

context "math()"
snippet == "Equal in align" wA
&=
endsnippet

priority 1
context "math()"
snippet cases "Cases" wA
\begin{cases}
	${1:${VISUAL}}
\end{cases}$0
endsnippet

context "math()"
snippet ,, "Comma in cases" iA
, & 
endsnippet

context "math()"
snippet ,\ "Comma in cases" iA
, \\\\

endsnippet

priority 10
context "math()"
snippet orcases "Set of equations" wA
\left[ {
	\def\arraystretch{1.2}
	\begin{array}{@{}l@{\quad}l@{}}
		${1:${VISUAL}}
	\end{array}
} \right.$0
endsnippet

context "math()"
snippet gath "gathered" b
\begin{gathered}
	${1:${VISUAL}}
\end{gathered}$0
endsnippet

context "math()"
snippet tt "text" wA
\text{${1:${VISUAL}}} $0
endsnippet

#########
# Paren #
#########
context "math()"
snippet lr( "\left( \right)" wA
\left( ${1:${VISUAL}} \right)
endsnippet

context "math()"
snippet lr[ "\left[ \right]" wA
\left[ ${1:${VISUAL}} \right]
endsnippet

context "math()"
snippet lr{ "\left{ \right}" wA
\left\\\{ ${1:${VISUAL}} \right\\\}
endsnippet

context "math()"
snippet lr< "\left< \right>" wA
\left< ${1:${VISUAL}} \right>
endsnippet

context "math()"
snippet lr| "\left< \right>" wA
\left\| ${1:${VISUAL}} \right\|
endsnippet

############
# Sections #
############

snippet prt "Part" b
\part{$1}
\label{prt:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}
$0
endsnippet

snippet cha "Chapter" b
\chapter{$1}
\label{cha:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}
$0
endsnippet

snippet sc "Section" b
\section{$1}
\label{sec:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}
$0
endsnippet

snippet sub "Subsection" b
\subsection{$1}
\label{sub:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}
$0
endsnippet

snippet ssub "Subsubsection" b
\subsubsection{$1}
\label{ssub:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}
$0
endsnippet

snippet par "Paragraph" b
\paragraph{$1}
\label{par:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}
$0
endsnippet

snippet subp "Subparagraph" b
\subparagraph{$1}
\label{par:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}
$0
endsnippet


snippet prtnl "Part no label" bA
\part{$1}$0
endsnippet

snippet chanl "Chapter no label" ibA
\chapter{$1}$0
endsnippet

snippet scnl "Section no label" bA
\section{$1}$0
endsnippet

snippet subnl "Subsection no label" bA
\subsection{$1}$0
endsnippet

snippet ssubnl "Subsubsection no label" bA
\subsubsection{$1}$0
endsnippet

snippet parnl "Paragraph no label" bA
\paragraph{$1}$0
endsnippet

snippet subpnl "Subparagraph no label" bA
\subparagraph{$1}$0
endsnippet

############
# Packages #
############

snippet pac "Package" b
\usepackage[${1:options}]{${2:package}}
$0
endsnippet

snippet pacna "Package without arguments" bA
\usepackage{$1}$0
endsnippet

###########
# Spacing #
###########

snippet "(?<=\s) q" "\quad" wrA
\quad 
endsnippet

#############
# Fractions #
#############

context "math()"
snippet // "Fraction" wA
\\frac{$1}{$2}$0
endsnippet

context "math() and snip.visual_text"
snippet / "Fraction" iA
\\frac{${VISUAL}}{$1}$0
endsnippet

context "math()"
snippet '([\\A-Za-z'_^\d\.]+)/' "Fraction" irA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
context "math()"
snippet '^.*\)/' "() Fraction" irA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	elif stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i -= 1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1} $0
endsnippet

#############
# Subscript #
#############

context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" irA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript 2" irA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`$1} 
endsnippet

context "math()"
snippet __ "subscript" iA
_{${1:${VISUAL}}} $0
endsnippet

###################
# Large operators #
###################

context "math()"
snippet "(?<!\\)dint" "definite integral" wrA
\int_{${1:-\infty}}^{${2:\infty}} ${4:${VISUAL}}\: d${3:x} 
endsnippet

context "math()"
snippet "(?<!\\)int" "indefinite integral" wrA
\int ${1:${VISUAL}}\: d${2:x} 
endsnippet

context "math()"
snippet "(?<!\\)sum" "sum" wrA
\sum_{${1:i}=${2:0}}^{${3:n}} ${4:${VISUAL}} 
endsnippet

context "math()"
snippet "(?<!\\)prod" "product" wrA
\prod_{${1:n} = ${2:1}}^{${3:\infty}} ${4:${VISUAL}} 
endsnippet

context "math()"
snippet "(?<!\\)lim" "limit" wrA
\lim_{${1:n} \to ${2:\infty}} ${3:${VISUAL}} 
endsnippet

####################
# Powers and roots #
####################

priority 0
context "math()"
snippet sr "\sqrt{}" iA
\sqrt{${1:${VISUAL}}} 
endsnippet

priority 1
context "math()"
snippet nsr "sqrt" iA
\sqrt[$1]{${2:${VISUAL}}} 
endsnippet

context "math()"
snippet sq "^2" iA
^2 
endsnippet

context "math()"
snippet qb "^3" iA
^3 
endsnippet

context "math()"
snippet tp "to the power" iA
^{$1} 
endsnippet

###########
# Indices #
###########

context "math()"
snippet xnn "xn" wA
x_n 
endsnippet

context "math()"
snippet ynn "yn" wA
y_n 
endsnippet

context "math()"
snippet xii "xi" wA
x_i 
endsnippet

context "math()"
snippet yii "yi" wA
y_i 
endsnippet

context "math()"
snippet xjj "xj" wA
x_j 
endsnippet

context "math()"
snippet yjj "yj" wA
y_j 
endsnippet

context "math()"
snippet xmm "x_m" wA
x_m 
endsnippet

############
# Symmbols #
############

context "math()"
snippet "(?<!\\)(sim|pi|perp|to|in|iff|star|land|lor|lnot)" "Symbols" rwA
\\`!p snip.rv = match.group(0)` 
endsnippet

context "math()"
snippet "(?<!\\)not" "\not" rwA
\not 
endsnippet

context "math()"
snippet "\\not\s+\\(\w*)\s+" "Remove extra space between \not and the next command" rwA
\\not\\`!p snip.rv = match.group(1)` 
endsnippet

context "math()"
snippet tO "Approaches ... as ... approaches ..." wA
\underset{${1:x} \to ${2:\infty}}\longrightarrow 
endsnippet

context "math()"
snippet "(?<!\\)prop" "proportional to" wrA
\propto 
endsnippet

context "math()"
snippet +- "Plus Minus" wA
\pm 
endsnippet

context "math()"
snippet -+ "Minus Plus" wA
\mp 
endsnippet

context "math()"
snippet xx "Times" wA
\times 
endsnippet

context "math()"
snippet ** "cdot" wA
\cdot 
endsnippet

context "math()"
snippet *.. "cdots" wA
\cdots 
endsnippet

context "math()"
snippet ... "\dots" wA
\ldots 
endsnippet

context "math()"
snippet ~~ "approx" wA
\approx 
endsnippet

context "math()"
snippet UU "U" wA
\cup 
endsnippet

context "math()"
snippet CA "cap" wA
\cap 
endsnippet

context "math()"
snippet || "mid" wA
\mid 
endsnippet

context "math()"
snippet cc "subset" wA
\subset 
endsnippet

context "math()"
snippet ncc "not subset" wA
\not\subset 
endsnippet

context "math()"
snippet NN "Natural" wA
\mathbb N 
endsnippet

context "math()"
snippet ZZ "Integer" wA
\mathbb Z 
endsnippet

context "math()"
snippet QQ "Rational" wA
\mathbb Q 
endsnippet

context "math()"
snippet RR "Real" wA
\mathbb R 
endsnippet

context "math()"
snippet II "Irrational" wA
\mathbb I 
endsnippet

context "math()"
snippet CC "Complex" wA
\mathbb C 
endsnippet

context "math()"
snippet -set "set minus" wA
\setminus 
endsnippet

context "math()"
snippet prl "parallel" wA
\parallel 
endsnippet

context "math()"
snippet ooo "\infty" wA
\infty 
endsnippet

priority 10
context "math()"
snippet EE "exist" wA
\exists 
endsnippet

priority 100
context "math()"
snippet "\\not\s*EE" "does not exist" wrA
\nexists 
endsnippet

context "math()"
snippet AA "forall" wA
\forall 
endsnippet

context "math()"
snippet "(?<!<)=>" "implies" wrA
\implies 
endsnippet

context "math()"
snippet != "not equals" wA
\neq 
endsnippet

context "math()"
snippet "(?<!\\)geq" "less than or equals to" wrA
\geqslant 
endsnippet

context "math()"
snippet "(?<!\\)leq" "greater than or equals to" wrA
\leqslant 
endsnippet

context "math()"
snippet =def "equals by definition" wA
\overset{\text{def}}= 
endsnippet

###############
# Oversymbols #
###############

priority 100
context "math()"
snippet "([\\A-Za-z'_^\d\.]+(?<!\\))bar" "bar" rwA
\overline{`!p snip.rv = match.group(1)`} 
endsnippet

priority 10
context "math()"
snippet "(?<!\\)bar" "bar" rwA
\overline{${1:${VISUAL}}} 
endsnippet

priority 100
context "math()"
snippet "([\\A-Za-z'_^\d\.]+(?<!\\))hat" "vector" rwA
\hat{`!p snip.rv = match.group(1)`} 
endsnippet

priority 10
context "math()"
snippet "(?<!\\)hat" "hat" rwA
\hat{${1:${VISUAL}}} 
endsnippet

priority 100
context "math()"
snippet "([\\A-Za-z'_^\d\.]+(?<!\\))vec" "vector" rwA
\overrightarrow{`!p snip.rv = match.group(1)`} 
endsnippet

priority 10
context "math()"
snippet "(?<!\\)vec" "vector" rwA
\overrightarrow{${1:${VISUAL}}} 
endsnippet

#############
# Operators #
#############

context "math()"
snippet '(?<!\\)(lg|ln|log|exp|deg)' "operators" rwA
\\`!p snip.rv = match.group(1)` 
endsnippet

context "math()"
snippet '(?<!\\)((arc)?(sin|cos|tan|cot|sec|csc)(h)?)' "trigonometry" rwA
\\`!p snip.rv = match.group(1)` 
endsnippet

#########
# Greek #
#########

context "math()"
snippet DD "Delta" wA
\Delta 
endsnippet

#####################
# Other expressions #
#####################

context "math()"
snippet Cnk "Binomial coefficient" wA
C_n^k 
endsnippet

context "math()"
snippet fun "a function" wA
${1:${2:D} \subset \mathbb R} \to ${3:\mathbb R} 
endsnippet
