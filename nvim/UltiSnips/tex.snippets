global !p
def math():
	return vim.eval("vimtex#syntax#in_mathzone()") == "1"
endglobal

################
# Environments #
################

snippet beg "begin{} / end{}" bA
\\begin{${1:environment}}$2
	${VISUAL}$0
\\end{$1}
endsnippet

snippet tab "Tabular" bA
\\begin{tabular}{${1:r|l}}
	${VISUAL}$0
\\end{tabular}
endsnippet

snippet enum "Enumerate" b
\begin{enumerate}
	\item ${VISUAL}$0
\end{enumerate}
endsnippet

snippet enumru "Cirilic letters enumerate" b
	\begin{enumerate}[label=\asbuk*)]
		\item ${VISUAL}$0
	\end{enumerate}
endsnippet

snippet item "Itemize" b
\begin{itemize}
	\item ${VISUAL}$0
\end{itemize}
endsnippet

snippet itt "\item" bA
\item
endsnippet

priority 10
snippet cnt "Center" bA
\begin{center}
	${VISUAL}$0
\end{center}
endsnippet

priority 100
snippet tcnt "Center + \tiny" bA
\begin{center}
	\tiny
	${VISUAL}$0
\end{center}
endsnippet

snippet desc "Description" b
\begin{description}
	\item[$1] ${VISUAL}$0
\end{description}
endsnippet

context "math()"
snippet "(p|b|v|V|B)mat" "Smart Matrix" wrA
\begin{`!p snip.rv = match.group(1)`matrix}
	${VISUAL}${1:\ldots}
\end{`!p snip.rv = match.group(1)`matrix}
endsnippet

priority 1
context "not math()"
snippet mk "Inline math" wA
\(\{ ${VISUAL}$1 \}\)
endsnippet

priority 100
context "not math()"
snippet mK "math" A
\[
	${VISUAL}$1
\] $0
endsnippet

priority 10
snippet mV "\verb|...|" wA
\verb|$1|
endsnippet

context "not math()"
snippet eq "Equation" b
\begin{equation}
	\label{eq:$1}
	${VISUAL}$0
\end{equation}
endsnippet

context "not math()"
snippet eqnn "Equation without number" bA
\begin{equation*}
	${VISUAL}$0
\end{equation*}
endsnippet

context "math()"
snippet align "Align" bA
\begin{aligned}
	${VISUAL}$1
\end{aligned}
endsnippet

context "not math()"
snippet align "Align" bA
\begin{align*}
	${VISUAL}$1
\end{align*}
endsnippet

context "not math()"
snippet mult "Multline" bA
\begin{multline*}
	${VISUAL}$1
\end{multline*}
endsnippet

context "math()"
snippet == "Equal in align" wA
&=
endsnippet

context "math()"
snippet :: ":=" wA
\coloneqq
endsnippet

context "math()"
snippet "&=>" "Implies in align" wA
&\implies
endsnippet

priority 1
context "math()"
snippet cases "Cases" wA
\begin{cases}
	${VISUAL}$1
\end{cases}
endsnippet

priority 10
context "math()"
snippet orcases "Set of equations" wA
\left[ {
	\begin{array}{@{}l@{\quad}l@{}}
		${VISUAL}$1
	\end{array}
} \right.
endsnippet

context "math()"
snippet gath "gathered" bA
\begin{gathered}
	${VISUAL}$1
\end{gathered}
endsnippet

context "not math()"
snippet gath "gather" bA
\begin{gather*}
	${VISUAL}$1
\end{gather*}
endsnippet

snippet def "definition" b
\begin{definition}
	${VISUAL}$1
\end{definition}
endsnippet

snippet thm "theorem" b
\begin{theorem}
	${VISUAL}$1
\end{theorem}
endsnippet

snippet cor "corollary" b
\begin{corollary}
	${VISUAL}$1
\end{corollary}
endsnippet

snippet lem "lemma" b
\begin{lemma}
	${VISUAL}$1
\end{lemma}
endsnippet

snippet prop "proposition" b
\begin{proposition}
	${VISUAL}$1
\end{proposition}
endsnippet

snippet proof "proof" b
\begin{proof}
	${VISUAL}$1
\end{proof}
endsnippet

context "math()"
snippet tT "text" wA
\text{${VISUAL}$1}
endsnippet

priority 100
context "math()"
snippet iv "inverse" iA
^{-1}
endsnippet

snippet bl "textbf" w
\textbf{${VISUAL}$1}
endsnippet

snippet it "textit" w
\textit{${VISUAL}$1}
endsnippet

#########
# Paren #
#########
context "math()"
snippet lra "\langle \rangle" iA
\langle ${VISUAL}$1 \rangle
endsnippet

priority 1000
context "math()"
snippet lrA "\left\langle \right\rangle" iA
\left\langle ${VISUAL}$1 \right\rangle
endsnippet

context "math()"
snippet lA "\langle" iA
\langle
endsnippet

priority 100
context "math()"
snippet rA "\rangle" iA
\rangle
endsnippet

context "math()"
snippet lrm "\left| \right|" iA
\left\lvert ${VISUAL}$1 \right\rvert
endsnippet

context "math()"
snippet lrM "\left|| \right||" iA
\left\lVert ${VISUAL}$1 \right\rVert
endsnippet

context "math()"
snippet lrp "\left( \right)" iA
\left( ${VISUAL}$1 \right)
endsnippet

context "math()"
snippet "lr(b|P)" "\left[ \right]" irA
\left[ ${VISUAL}$1 \right]
endsnippet

context "math()"
snippet lrB "\left{ \right}" iA
\left\\{ ${VISUAL}$1 \right\\}
endsnippet

context "math()"
snippet lrc "\left\lceil \right\rceil" iA
\left\lceil ${VISUAL}$1 \right\rceil
endsnippet

context "math()"
snippet lrf "\left\lfloor \right\rfloor" iA
\left\lfloor ${VISUAL}$1 \right\rfloor
endsnippet

###############
# Punctuation #
###############
snippet ,: "Comma with space" iA
,\:
endsnippet

snippet ... "\dots" iA
\ldots
endsnippet

context "math()"
snippet "(?<!\\),(,|\.|\?|!)" "\,," irA
\,`!p snip.rv = match.group(1)`
endsnippet

############
# Sections #
############

snippet prt "Part" b
\part{$1}
\label{prt:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}

endsnippet

snippet cha "Chapter" b
\chapter{$1}
\label{cha:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}

endsnippet

snippet sc "Section" b
\section{$1}
\label{sec:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}

endsnippet

snippet sub "Subsection" b
\subsection{$1}
\label{sub:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}

endsnippet

snippet ssub "Subsubsection" b
\subsubsection{$1}
\label{ssub:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}

endsnippet

snippet par "Paragraph" b
\paragraph{$1}
\label{par:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}

endsnippet

snippet subp "Subparagraph" b
\subparagraph{$1}
\label{par:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}

endsnippet


snippet prtnl "Part no label" bA
\part{$1}
endsnippet

snippet chanl "Chapter no label" ibA
\chapter{$1}
endsnippet

snippet scnl "Section no label" bA
\section{$1}
endsnippet

snippet subnl "Subsection no label" bA
\subsection{$1}
endsnippet

snippet ssubnl "Subsubsection no label" bA
\subsubsection{$1}
endsnippet

snippet parnl "Paragraph no label" bA
\paragraph{$1}
endsnippet

snippet subpnl "Subparagraph no label" bA
\subparagraph{$1}
endsnippet

snippet lbl "label" bA
\label{$1}
endsnippet

snippet "\s*rf" "\ref" rwA
~\ref{$1}
endsnippet

############
# Packages #
############

snippet pac "Package" b
\usepackage[${1:options}]{${2:package}}
endsnippet

snippet pacna "Package without arguments" bA
\usepackage{$1}
endsnippet

###########
# Spacing #
###########

snippet "  q" "\quad" irA
 \quad
endsnippet

snippet "  :" "\:" irA
\: $0
endsnippet

snippet \quadq "\qquad" iA
\\qquad
endsnippet

snippet pph "\phantom{...}" wA
\\phantom{$1}
endsnippet

snippet hfl "\hfill" wA
\\hfill
endsnippet

priority 100
snippet \= "\\ =" iA
\\\\
&${1:=}
endsnippet

priority 1000
snippet \\= "\\\\ =" iA
\\\\\\\\
=
endsnippet

context "math()"
snippet dD "\displaystyle" wA
\displaystyle
endsnippet

#############
# Fractions #
#############

context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}
endsnippet

context "math() and snip.visual_text"
snippet / "Fraction" iA
\\frac{${VISUAL}}{$1}
endsnippet

context "math()"
snippet "([\\A-Za-z'_^\d\.]+)/" "Fraction" irA
\\frac{`!p snip.rv = match.group(1)`}{$1}
endsnippet

priority 1000
context "math()"
snippet '(^.*\))/' "() Fraction" irA
`!p
stripped = match.group(1)
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	elif stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i -= 1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1} $0
endsnippet

#############
# Subscript #
#############

context "math()"
snippet "([A-Za-bd-z']|(?<!\{\{)c)(\d)" "auto subscript" irA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet "_(\d\d)" "auto subscript 2" irA
_{`!p snip.rv = match.group(1)`$1}
endsnippet

context "math()"
snippet __ "subscript" iA
_{${VISUAL}$1}
endsnippet

priority 10
context "math()"
snippet "([a-zA-Z'\)])([ijklmn])\2" "letter subscript" irA
`!p snip.rv = match.group(1) + "_" + match.group(2)`
endsnippet

priority 100
context "math()"
snippet eL "\ell" iA
\ell
endsnippet

context "math()"
snippet ++ "_+" iA
_+
endsnippet

context "math()"
snippet -- "_-" iA
_-
endsnippet

context "math()"
snippet "(?<!{|\^|\*)\*\*" "^*" irA
^*
endsnippet

context "math()"
snippet ^** "^{**}" iA
^{**$1}
endsnippet

###################
# Large operators #
###################

priority 100
context "math()"
snippet "dint" "definite integral" wrA
\int_{$1}^{$2} $0
endsnippet

priority 100
context "math()"
snippet "dnt" "definite integral" wrA
\int_{$1} $0
endsnippet

priority 101
context "math()"
snippet "ddnt" "definite integral" wrA
\iint_{$1} $0
endsnippet

context "math()"
snippet "(?<!\\:)(?<=\S)(\s*d(\w|\\\w+)?)\." "\: dx" wrA
\:`!p snip.rv = match.group(1)`
endsnippet

context "math()"
snippet "(?<!\\)Sum" "smart sum" wrA
\sum`!p
snip.rv = "_{" if t[1] else ""
`${1:n=1}`!p
snip.rv = "}" if t[1] else ""
``!p
snip.rv = "^{" if t[2] else ""
`${2:\infty}`!p
snip.rv = "}" if t[2] else ""
` ${VISUAL}$0
endsnippet

context "math()"
snippet "(?<!\\)Prod" "product" wrA
\prod`!p
snip.rv = "_{" if t[1] else ""
`${1:n=1}`!p
snip.rv = "}" if t[1] else ""
``!p
snip.rv = "^{" if t[2] else ""
`${2:\infty}`!p
snip.rv = "}" if t[2] else ""
` ${VISUAL}$0
endsnippet

context "math()"
snippet "(?<!\\)(i|s)?lim" "limit (sup | inf)" wrA
\lim`!p
g = match.group(1)
if g == "i":
	snip.rv = "inf"
elif g == "s":
	snip.rv = "sup"
``!p
snip.rv = "_{" if t[1] else ""
`${1:n \to \infty}`!p
snip.rv = "}" if t[1] else ""
` ${VISUAL}$0
endsnippet

context "math()"
snippet "(?<!\\)sum" "sum" wrA
\sum
endsnippet

context "math()"
snippet "(?<!\\)prod" "prod" wrA
\prod
endsnippet

####################
# Powers and roots #
####################

context "math()"
snippet Sr "sqrt[n]" iA
\sqrt`!p
snip.rv = "[" if t[1] else ""
`${1:n}`!p
snip.rv = "]" if t[1] else ""
`{${VISUAL}$2}
endsnippet

context "math()"
snippet sr "sqrt" iA
\sqrt{${VISUAL}$1}
endsnippet

context "math()"
snippet sq "^2" iA
^2
endsnippet

context "math()"
snippet qb "^3" iA
^3
endsnippet

context "math()"
snippet tp "to the power" iA
^{$1}
endsnippet

context "math()"
snippet tP "sub" iA
_{$1}
endsnippet

###########
# Symbols #
###########

priority 10
context "math()"
snippet "(?<!\\)to" "\to" rwA
\to
endsnippet

priority 100
context "math()"
snippet dto "\rightrightarrows" wA
\rightrightarrows
endsnippet

priority 100
context "math()"
snippet lto "long \to" wA
\longrightarrow
endsnippet

priority 100
context "math()"
snippet bto "\leftrightarrow" wA
\leftrightarrow
endsnippet

priority 10
context "math()"
snippet ot "gets" wA
\gets
endsnippet

priority 10
context "math()"
snippet in "\in" wA
\in
endsnippet

context "math()"
snippet has "\#" wA
\#
endsnippet

priority 10
context "math()"
snippet "(?<!\\)(sim|pi|perp|iff|star|land|lor|neq|star)" "Symbols" rwA
\\`!p snip.rv = match.group(0)`
endsnippet

context "math()"
snippet lN "logical not" wA
\lnot
endsnippet

context "math()"
snippet lR "logical or" wA
\lor
endsnippet

context "math()"
snippet lD "logical and" wA
\land
endsnippet

context "math()"
snippet lI "logical equivalence" wA
\leftrightarrow
endsnippet

context "math()"
snippet lT "logical implication" wA
\to
endsnippet

priority 100
context "math()"
snippet nin "\notin" wA
\notin
endsnippet

priority 100
context "math()"
snippet mto "\mapsto" wA
\\mapsto
endsnippet

priority 100
context "math()"
snippet hto "\hookrightarrow" wA
\hookrightarrow
endsnippet

priority 100
context "math()"
snippet gets "\gets" wA
\gets
endsnippet

context "math()"
snippet "(?<!\\|\w)not" "\not" rwA
\not
endsnippet

context "math()"
snippet jJ "function composition (\circ)" wA
\circ
endsnippet

context "math()"
snippet sJ "star" wA
\star
endsnippet

context "math()"
snippet tJ "triangleup" wA
\bigtriangleup
endsnippet

priority 10
context "math()"
snippet <| "\triangleleft" wA
\triangleleft
endsnippet

priority 100
context "math()"
snippet "\\not\<\|" "\ntriangleleft" wrA
\ntriangleleft
endsnippet

priority 10
context "math()"
snippet |> "\triangleright" wA
\triangleright
endsnippet

priority 100
context "math()"
snippet "\\not\|>" "\ntriangleright" wrA
\ntriangleright
endsnippet

context "math()"

context "math()"
snippet o+ "\oplus" wA
\oplus
endsnippet

context "math()"
snippet "(?<!\\)prop" "proportional to" wrA
\propto
endsnippet

context "math()"
snippet +- "Plus Minus" iA
\pm
endsnippet

context "math()"
snippet -+ "Minus Plus" iA
\mp
endsnippet

priority 100
context "math()"
snippet xx "Times" wA
\times
endsnippet

priority 1000
context "math()"
snippet |x  "Left times" wA
\ltimes
endsnippet

priority 1000
context "math()"
snippet x|  "Left times" wA
\rtimes
endsnippet

priority 10
context "math()"
snippet *. "cdot" wA
\cdot
endsnippet

priority 100
context "math()"
snippet ,*. "cdot placeholder" iA
\,\cdot\,
endsnippet

priority 10
snippet *o "odot" wA
\odot
endsnippet

context "math()"
snippet \cdot. "cdots" wA
\cdots
endsnippet

context "math()"
snippet "([cdv])d\*" "[cdv]dots" rwA
\\`!p snip.rv = match.group(1)`dots
endsnippet

priority 100
context "math()"
snippet V*. "\dot V_{} ()" wA
\dot V_{${1:\delta}}(${2:a})
endsnippet

context "math()"
snippet VV "V_{} ()" wA
V_{${1:\\delta}}(${2:a})
endsnippet

context "math()"
snippet ~- "simeq" wA
\simeq
endsnippet

context "math()"
snippet is- "isomorphic" wA
\simeq
endsnippet

context "math()"
snippet ~= "congruent" wA
\cong
endsnippet

context "math()"
snippet is= "isomorphic" wA
\cong
endsnippet

context "math()"
snippet "(=-|-=)" "equiv" wrA
\equiv
endsnippet

context "math()"
snippet equiv "equiv (mod n)" wA
\equiv$1 \pmod{$2}
endsnippet

context "math()"
snippet uu "U" wA
\cup
endsnippet

context "math()"
snippet UU "U" wA
\bigcup_{$1}^{$2}
endsnippet

context "math()"
snippet CA "cap" wA
\cap
endsnippet

context "math()"
snippet Ca "big cap" wA
\bigcap_{$1}^{$2}
endsnippet

context "math()"
snippet -* "simmetrical difference" wA
\bigtriangleup
endsnippet

context "math()"
snippet || "mid" wA
\mid
endsnippet

context "math()"
snippet B| "\Big |" wA
\Big |_{$1}^{$2} $0
endsnippet

context "math()"
snippet cc "subset" wA
\subset
endsnippet

context "math()"
snippet sc "supset" wA
\supset
endsnippet

context "math()"
snippet ncc "not subset" wA
\not\subset
endsnippet

context "math()"
snippet NN "Natural" iA
\mathbb N
endsnippet

context "math()"
snippet ZZ "Integer" iA
\mathbb Z
endsnippet

context "math()"
snippet ZN "Integers modulo n" wA
\mathbb Z / ${1:n}\mathbb Z
endsnippet

context "math()"
snippet QQ "Rational" iA
\mathbb Q
endsnippet

context "math()"
snippet RR "Real" iA
\mathbb R
endsnippet

context "math()"
snippet II "Irrational" iA
\mathbb I
endsnippet

context "math()"
snippet CC "Complex" iA
\mathbb C
endsnippet

snippet SS "Circle group" wA
\mathbb S^1
endsnippet

priority 1000
snippet OO "Zero operator" wA
\mathbb O
endsnippet

snippet BB "{T, F}" wA
\mathbb B
endsnippet

context "math()"
snippet alph "aleph" wA
\aleph
endsnippet

context "math()"
snippet LL "Linear span" wA
\mathscr L (${VISUAL}$1)
endsnippet

context "math()"
snippet PP "Antiderivatives set" wA
\mathscr P_${1:f}
endsnippet

context "math()"
snippet FF "A field" iA
\mathrm F
endsnippet

context "math()"
snippet ddf "partial derivative" wA
\frac{\partial ${1:f}}{\partial ${2:e}}
endsnippet

context "math()"
snippet par "\partial" wA
\partial
endsnippet

context "math()"
snippet scr "\mathscr" wA
\mathscr
endsnippet

priority 100
context "math()"
snippet mset "set minus" wA
\setminus
endsnippet

priority 10
context "math()"
snippet set "\{ ... \}" wA
\left\\{ ${VISUAL}$1 \right\\}
endsnippet

priority 100
context "math()"
snippet bset "big \{ ... \}" wA
\\Big\\{ ${VISUAL}$1 \Big\\}
endsnippet

priority 10
context "math()"
snippet prl "parallel" wA
\parallel
endsnippet

priority 100
context "math()"
snippet nprl "parallel" wA
\nparallel
endsnippet

context "math()"
snippet oo "\infty" wA
\infty
endsnippet

priority 10
context "math()"
snippet EE "exist" wA
\exists
endsnippet

priority 100
context "math()"
snippet "\\notEE" "does not exist" wrA
\nexists
endsnippet

priority 10
context "math()"
snippet AA "forall" wA
\forall
endsnippet

priority 100
context "math()"
snippet tAA "for all" wA
\text{for all}\
endsnippet

priority 10
context "math()"
snippet "(?<!\\)impl|(?<!<)=>" "implies" wrA
\implies
endsnippet

priority 11
context "math()"
snippet "(?<!\\)rimpl|(?<!<)=<" "implied by" wrA
\impliedby
endsnippet

priority 11
context "math()"
snippet "(\\not|(?<!\\)n)(impl|(?<!<)=>)" "does not imply" wrA
\:\:\not\!\!\!\implies
endsnippet

context "math()"
snippet \impliesdf "implies by definition" wA
\overset{\!\!\text{\tiny def}}\implies
endsnippet

priority 100
context "math()"
snippet \iffdf "if and only iff (by definition)" wA
\overset{\hspace{-1pt}\text{\tiny def}}\iff
endsnippet

context "math()"
snippet =df "equals by definition" wA
\overset{\text{def}}=
endsnippet

context "math()"
snippet != "not equals" wA
\neq
endsnippet

context "math()"
snippet "(?<!\\)geq|>=" "greater than or equals to" wrA
\geqslant
endsnippet

context "math()"
snippet "(?<!\\)leq|<=" "less than or equals to" wrA
\leqslant
endsnippet

context "math()"
snippet gq "greater than or equals to" wA
\geq
endsnippet

context "math()"
snippet lq "less than or equals to" wA
\leq
endsnippet

context "math()"
snippet "!-" "monotonic (increasing)" wrA
\!\!\nearrow
endsnippet

context "math()"
snippet ner "North-east arrow" wA
\nearrow
endsnippet

context "math()"
snippet ser "South-east arrow" wA
\searrow
endsnippet

priority 1000
context "math()"
snippet "\\!\\!\\nearrow-" "monotonic (strictly increasing)" wrA
\!\!\nearrow\!\nearrow
endsnippet

context "math()"
snippet "(?<!\\)(false|bot)" "\bot" wrA
\bot
endsnippet

context "math()"
snippet "(?<!\\)(true|top)" "\bot" wrA
\top
endsnippet

###############
# Oversymbols #
###############

priority 1000
context "math()"
snippet "(?<=\s)([a-z])bar" "bar" rwA
\bar `!p snip.rv = match.group(1)`
endsnippet

priority 100
context "math()"
snippet "([\\A-Za-z'_^\d\.]+(?<!\\))bar" "bar" rwA
\overline{`!p snip.rv = match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "(?<!\\)bar" "bar" rwA
\overline{${VISUAL}$1}
endsnippet

priority 100
context "math()"
snippet "([\\A-Za-z'_^\d\.]+(?<!\\))Bar" "underline" rwA
\underline{`!p snip.rv = match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "(?<!\\)Bar" "underline" rwA
\underline{${VISUAL}$1}
endsnippet

priority 100
context "math()"
snippet "([\\A-Za-z'_^\d\.]+(?<!\\))ht" "vector" rwA
\hat{`!p snip.rv = match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "(?<!\\)ht" "hat" rwA
\hat{${VISUAL}$1}
endsnippet

priority 100
context "math()"
snippet "([\\A-Za-z'_^\d\.]+(?<!\\))dt" "time derivative" rwA
\dot{`!p snip.rv = match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "(?<!\\)dot" "time derivative" rwA
\dot{${VISUAL}$1}
endsnippet

priority 1000
context "math()"
snippet "([\\A-Za-z'_^\d\.]+(?<!\\))ring" "\mathring" rwA
\mathring{`!p snip.rv = match.group(1)`}
endsnippet

priority 100
context "math()"
snippet "(?<!\\)ring" "\mathring" rwA
\mathring{${VISUAL}$1}
endsnippet

context "math()"
snippet "(?<!\\)wht" "widehat" rwA
\widehat{${VISUAL}$1}
endsnippet

priority 100
context "math()"
snippet "([\\A-Za-z'_^\d\.]+(?<!\\))vec" "vector" rwA
\overrightarrow{`!p snip.rv = match.group(1)`}
endsnippet

priority 100
context "math()"
snippet "(?<!\\widetilde )(?<![\\A-Za-z])(\\?[A-Za-z]+)~" "tilde" rwA
\tilde `!p snip.rv = match.group(1)`
endsnippet

priority 1000
context "math()"
snippet "\\tilde (\\?[A-Za-z]+)~" "widetilde" rwA
\widetilde `!p snip.rv = match.group(1)`
endsnippet

priority 10
context "math()"
snippet ~~ "\widetilde" wA
\widetilde
endsnippet

context "math()"
snippet .~ "\tilde" wA
\tilde
endsnippet

context "math()"
snippet "([A-Z])bb" "\mathbb [A-Z]" rwA
\mathbb `!p snip.rv = match.group(1)`
endsnippet

context "math()"
snippet "([A-Z])cl" "\mathcal [A-Z]" rwA
\mathcal `!p snip.rv = match.group(1)`
endsnippet

context "math()"
snippet "([A-Za-z]+)fk" "\mathfrak ..." rwA
\mathfrak{`!p snip.rv = match.group(1)`}
endsnippet

context "math()"
snippet "([A-Za-z0-9]+)bl" "\mathbf ..." rwA
\mathbf{`!p snip.rv = match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "(?<!\\)vec" "vector" rwA
\overrightarrow{${VISUAL}$1}
endsnippet

priority 10
context "math()"
snippet bU "Underbrace" wA
\underbrace{${VISUAL}$1}_{$2}
endsnippet

priority 10
context "math()"
snippet '([\\A-Za-z'_^\d\.]+)bU' "Underbrace" irA
\underbrace{`!p snip.rv = match.group(1)`}_{$1}
endsnippet

priority 100
context "math()"
snippet '(^.*\))bU' "() Underbrace" irA
`!p
stripped = match.group(1)
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	elif stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i -= 1
snip.rv = stripped[0:i] + "\\underbrace{" + stripped[i:] + "}"
`_{$1} $0
endsnippet

priority 1000
context "math() and snip.visual_text"
snippet BB "Visual underbrace" wA
\underbrace{${VISUAL}}_{$1}
endsnippet

priority 10
context "math()"
snippet ove "Overset" wA
\overset{$1}_{$2}
endsnippet

priority 100
context "math()"
snippet '([\\A-Za-z'_^\d\.=]+)ove' "Overset" irA
\overset{$1}{`!p snip.rv = match.group(1)`}
endsnippet

priority 1000
context "math() and snip.visual_text"
snippet ove "Visual overset" wA
\overset{$1}{${VISUAL}}
endsnippet

priority 10
context "math()"
snippet und "Underset" wA
\underset{$1}{$2}
endsnippet

priority 100
context "math()"
snippet '([\\A-Za-z'_^\d\.=]+)und' "Underset" irA
\underset{$1}{`!p snip.rv = match.group(1)`}
endsnippet

priority 1000
context "math() and snip.visual_text"
snippet und "Visual underset" wA
\underset{$1}{${VISUAL}}
endsnippet

#############
# Operators #
#############

context "math()"
snippet '(?<!\\|\w)(lg|ln|log|exp|deg|min|max|dim|ker|det|sup|gcd|lcd)' "operators" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 100
context "math()"
snippet "\\?([A-Za-z]+)O" "\operatorname {...}" wrA
\operatorname{`!p snip.rv = match.group(1)`}
endsnippet

priority 100
context "math()"
snippet '(?<!\\|\w)((arc)?(sin|cos|tan|cot|sec|csc))' "trigonometry" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 1000
context "math()"
snippet '(?<!\w)\\?(a(sin|cos|tan|cot|sec|csc))' "inverse trigonometry" rwA
\\arc`!p snip.rv = match.group(2)`
endsnippet

#########
# Greek #
#########

context "math()"
snippet DD "Delta" wA
\Delta
endsnippet

context "math()"
snippet nD "nabla" wA
\nabla
endsnippet

#####################
# Other expressions #
#####################

context "math()"
snippet Cnk "Binomial coefficient" wA
C_n^k
endsnippet

context "math()"
snippet cnk "Binomial coefficent" wA
\binom{${1:n}}{${2:k}}
endsnippet

context "math()"
snippet fun "a function" wA
${1:${2:D} \subset \mathbb R} \to ${3:\mathbb R}
endsnippet

context "math()"
snippet :RR "E \subset \mathbb R^{n} \to \mathbb R^{m}" wA
: E \subset \mathbb R^{n} \to \mathbb R^{m}
endsnippet

context "math()"
snippet :Rn "E \subset \mathbb R^{n} \to \mathbb R" wA
: E \subset \mathbb R^{n} \to \mathbb R
endsnippet

context "math()"
snippet :Rm "E \subset \mathbb R^{n} \to \mathbb R" wA
: E \subset \mathbb R \to \mathbb R^{m}
endsnippet

########
# Anki #
########

snippet "note|ntoe" "Anki's note" br
\begin{note}{`!p
from uuid import uuid4
if not snip.c:
	snip.rv = uuid4().hex
`}
	${VISUAL}$0
\end{note}
endsnippet

snippet clz "Cloze deletion" wA
\begin{cloze}{${1:1}}
	${VISUAL}$2
\end{cloze}
endsnippet

priority 10
snippet iclz "Inline cloze deletion" wA
\begin{icloze}{${1:1}}${VISUAL}$2\end{icloze}
endsnippet

priority 100
snippet nclz "Inline cloze deletion with newlines" wA
\begin{icloze}{${1:1}}
	${VISUAL}$2
\end{icloze}
endsnippet

priority 100
snippet "\?\s*cl" "Cloze deletion that follows a question" irA
?

\begin{cloze}{${1:1}}
	${VISUAL}$2
\end{cloze}
endsnippet

priority 100
snippet cz "The usual cloze deletion" wA
{{c${1:1}::$2`!p snip.rv = re.sub(r"}(?=})", r"} ", snip.v.text)`}}
endsnippet

priority 1000
context "math()"
snippet cz "The usual cloze deletion within a math block" wA
{{c${1:1}::$2`!p snip.rv = re.sub(r"}(?=})", r"} ", snip.v.text)`::\dots}}
endsnippet

###########
# Phrases #
###########
snippet rpf? "В чём основная идея доказательства?" wA
В чём ключевая идея доказательства$1?
endsnippet

snippet pf? "What is the key idea in the proof?" wA
What is the key idea in the proof$1?
endsnippet

context "not math()"
snippet iff "if and only if" wA
if and only if
endsnippet

context "not math()"
snippet Iff "If and only if" wA
If and only if
endsnippet

context "not math()"
snippet riff "if and only if" wA
тогда и только тогда, когда
endsnippet

context "not math()"
snippet AA "for all" wA
for all
endsnippet

context "not math()"
snippet EE "there exist" wA
there exist
endsnippet

context "not math()"
snippet lcm "the least common multiple" wA
l.c.m.\ $0
endsnippet

context "not math()"
snippet gcd "the geatest common divisor" wA
g.c.d.\ $0
endsnippet
