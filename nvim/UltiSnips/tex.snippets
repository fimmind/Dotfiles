global !p
def math():
	return vim.eval("vimtex#syntax#in_mathzone()") == "1"
endglobal

################
# Environments #
################

snippet beg "begin{} / end{}" bA
\\begin{${1:environment}}$2
	${VISUAL}$0
\\end{$1}
endsnippet

snippet enum "Enumerate" b
\begin{enumerate}
	\item ${VISUAL}$0
\end{enumerate}
endsnippet

snippet enumru "Cirilic letters enumerate" b
	\begin{enumerate}[label=\asbuk*)]
		\item ${VISUAL}$0
	\end{enumerate}
endsnippet

snippet item "Itemize" b
\begin{itemize}
	\item ${VISUAL}$0
\end{itemize}
endsnippet

snippet desc "Description" b
\begin{description}
	\item[$1] ${VISUAL}$0
\end{description}
endsnippet

context "math()"
snippet "(p|b|v|V|B|small)mat" "Smart Matrix" wrA
\begin{`!p snip.rv = match.group(1)`matrix}
	${VISUAL}$1
\end{`!p snip.rv = match.group(1)`matrix}
$0
endsnippet

priority 1
context "not math()"
snippet mk "Inline math" wA
\( ${VISUAL}$1 \) $0
endsnippet

priority 100
context "not math()"
snippet mK "math" bA
\[
	${VISUAL}$1
\]
endsnippet

priority 10
context "not math()"
snippet mK "math" wA

\[
	${VISUAL}$1
\]$0
endsnippet

context "not math()"
snippet eq "Equation" b
\begin{equation}
	\label{eq:$1}
	${VISUAL}$0
\end{equation}
endsnippet

context "not math()"
snippet eqnn "Equation without number" bA
\begin{equation*}
	${VISUAL}$0
\end{equation*}
endsnippet

context "math()"
snippet align "Align" bA
\begin{aligned}
	${VISUAL}$1
\end{aligned}
endsnippet

context "not math()"
snippet mult "Multline" bA
\begin{multline*}
	${VISUAL}$1
\end{multline*}
endsnippet

context "math()"
snippet == "Equal in align" wA
&= 
endsnippet

context "math()"
snippet "&= >" "Implies in align" wA
&\implies 
endsnippet

priority 1
context "math()"
snippet cases "Cases" wA
\begin{cases}
	${VISUAL}$1
\end{cases}
endsnippet

priority 10
context "math()"
snippet orcases "Set of equations" wA
\left[ {
	\begin{array}{@{}l@{\quad}l@{}}
		${VISUAL}$1
	\end{array}
} \right.
endsnippet

context "math()"
snippet gath "gathered" bA
\begin{gathered}
	${VISUAL}$1
\end{gathered}$0
endsnippet

context "math()"
snippet tt "text" wA
\text{${VISUAL}$1} $0
endsnippet

#########
# Paren #
#########
context "math()"
snippet lra "\langle \rangle" wA
\langle ${VISUAL}$1 \rangle 
endsnippet

context "math()"
snippet lrA "\left\langle \right\rangle" wA
\left\langle ${VISUAL}$1 \right\rangle 
endsnippet

context "math()"
snippet lA "\langle" wA
\langle 
endsnippet

context "math()"
snippet rA "\rangle" wA
\rangle 
endsnippet

context "math()"
snippet lr( "\left( \right)" wA
\left( ${VISUAL}$1 \right)
endsnippet

context "math()"
snippet lr[ "\left[ \right]" wA
\left[ ${VISUAL}$1 \right]
endsnippet

context "math()"
snippet lr{ "\left{ \right}" wA
\left\{ ${VISUAL}$1 \right\}
endsnippet

snippet { "{}" iA
{${VISUAL}$1}
endsnippet
snippet ( "()" iA
(${VISUAL}$1)
endsnippet
snippet [ "[]" iA
[${VISUAL}$1]
endsnippet

###############
# Punctuation #
###############
priority 10
snippet "\s*(?<!\d)," ", " irA
, 
endsnippet

priority 100
context "math()"
snippet ", ?," "Comma in cases" irA
, & 
endsnippet

priority 10
snippet "(?<=\S)\s*(?<!\d)\." "." wrA
. 
endsnippet

snippet "(?<=\S)\s*\?" "Question mark" wrA
? 
endsnippet

snippet "(?<=\S)\s*!" "Bang" wrA
! 
endsnippet

priority 100
context "math()"
snippet '\.\. \.' "\dots" irA
 \ldots 
endsnippet

############
# Sections #
############

snippet prt "Part" b
\part{$1}
\label{prt:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}
$0
endsnippet

snippet cha "Chapter" b
\chapter{$1}
\label{cha:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}
$0
endsnippet

snippet sc "Section" b
\section{$1}
\label{sec:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}
$0
endsnippet

snippet sub "Subsection" b
\subsection{$1}
\label{sub:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}
$0
endsnippet

snippet ssub "Subsubsection" b
\subsubsection{$1}
\label{ssub:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}
$0
endsnippet

snippet par "Paragraph" b
\paragraph{$1}
\label{par:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}
$0
endsnippet

snippet subp "Subparagraph" b
\subparagraph{$1}
\label{par:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}
$0
endsnippet


snippet prtnl "Part no label" bA
\part{$1}$0
endsnippet

snippet chanl "Chapter no label" ibA
\chapter{$1}$0
endsnippet

snippet scnl "Section no label" bA
\section{$1}$0
endsnippet

snippet subnl "Subsection no label" bA
\subsection{$1}$0
endsnippet

snippet ssubnl "Subsubsection no label" bA
\subsubsection{$1}$0
endsnippet

snippet parnl "Paragraph no label" bA
\paragraph{$1}$0
endsnippet

snippet subpnl "Subparagraph no label" bA
\subparagraph{$1}$0
endsnippet

############
# Packages #
############

snippet pac "Package" b
\usepackage[${1:options}]{${2:package}}
$0
endsnippet

snippet pacna "Package without arguments" bA
\usepackage{$1}$0
endsnippet

###########
# Spacing #
###########

snippet "(?<!^)\s+ q" "\quad" wrA
 \quad 
endsnippet

#############
# Fractions #
#############

context "math()"
snippet // "Fraction" wA
\\frac{$1}{$2} 
endsnippet

context "math() and snip.visual_text"
snippet / "Fraction" iA
\\frac{${VISUAL}}{$1} 
endsnippet

context "math()"
snippet '([\\A-Za-z'_^\d\.]+)/' "Fraction" irA
\\frac{`!p snip.rv = match.group(1)`}{$1} 
endsnippet

priority 1000
context "math()"
snippet '(^.*\))\s*/' "() Fraction" irA
`!p
stripped = match.group(1)
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	elif stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i -= 1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1} $0
endsnippet

#############
# Subscript #
#############

context "math()"
snippet "([A-Za-z'])(\d)" "auto subscript" irA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet "([A-Za-z'])_(\d\d)" "auto subscript 2" irA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`$1} 
endsnippet

context "math()"
snippet __ "subscript" iA
_{${VISUAL}$1} 
endsnippet

context "math()"
snippet "([a-zA-Z'])([ijklmn])\2" "letter subscript" irA
`!p snip.rv = match.group(1) + "_" + match.group(2)` 
endsnippet

###################
# Large operators #
###################

priority 100
context "math()"
snippet "d\\in t" "definite integral" wrA
\int_{${1:-\infty}}^{${2:\infty}} ${VISUAL}$3\: ${4:dx} $0
endsnippet

priority 10
context "math()"
snippet "\\in t" "indefinite integral" wrA
\int ${VISUAL}$1\: ${2:dx} $0
endsnippet

context "math()"
snippet "(?<!\\)sum" "sum" wrA
\sum_{${1:i}=${2:0}}^{${3:n}} ${VISUAL}$0
endsnippet

context "math()"
snippet "(?<!\\)prod" "product" wrA
\prod_{${1:n} = ${2:1}}^{${3:\infty}} ${VISUAL}$0
endsnippet

context "math()"
snippet "(?<!\\)lim" "limit" wrA
\lim_{${1:n} \to ${2:\infty}} ${VISUAL}$0
endsnippet

####################
# Powers and roots #
####################

priority 10
context "math()"
snippet sr "\sqrt{}" iA
\sqrt{${VISUAL}$1} 
endsnippet

priority 100
context "math()"
snippet nsr "sqrt" iA
\sqrt[$1]{${VISUAL}$2} 
endsnippet

context "math()"
snippet sq "^2" iA
^2 
endsnippet

context "math()"
snippet qb "^3" iA
^3 
endsnippet

context "math()"
snippet tp "to the power" iA
^{$1}
endsnippet

context "math()"
snippet TT "Transposed" iA
^T 
endsnippet

############
# Symmbols #
############

priority 10
context "math()"
snippet "(?<!\\)(sim|pi|perp|to|in|iff|star|land|lor|lnot|neq)" "Symbols" rwA
\\`!p snip.rv = match.group(0)` 
endsnippet

priority 100
context "math()"
snippet mto "\mapsto" wA
\\mapsto 
endsnippet

context "math()"
snippet "\sim eq" "\simeq" wA
\simeq 
endsnippet

context "math()"
snippet "(?<!\\)not" "\not" rwA
\not 
endsnippet

context "math()"
snippet "\\not\s+\\(\w*)\s+" "Remove extra space between \not and the next command" rwA
\\not\\`!p snip.rv = match.group(1)` 
endsnippet

context "math()"
snippet tO "Approaches ... as ... approaches ..." wA
\underset{${1:x} \to ${2:\infty}}\longrightarrow 
endsnippet

context "math()"
snippet jJ "function composition (\circ)" wA
\circ 
endsnippet

priority 10
context "math()"
snippet <| "\triangleleft" wA
\triangleleft 
endsnippet

priority 100
context "math()"
snippet "\\not\s*<\|" "\ntriangleleft" wrA
\ntriangleleft 
endsnippet

priority 10
context "math()"
snippet |> "\triangleright" wA
\triangleright 
endsnippet

priority 100
context "math()"
snippet "\\not\s*\|>" "\ntriangleright" wrA
\ntriangleright 
endsnippet

context "math()"
snippet o+ "\oplus" wA
\oplus 
endsnippet

context "math()"
snippet "(?<!\\)prop" "proportional to" wrA
\propto 
endsnippet

context "math()"
snippet +- "Plus Minus" wA
\pm 
endsnippet

context "math()"
snippet -+ "Minus Plus" wA
\mp 
endsnippet

context "math()"
snippet xx "Times" wA
\times 
endsnippet

priority 10
context "math()"
snippet ** "cdot" wA
\cdot 
endsnippet

context "math()"
snippet "*. ." "cdots" wA
\cdots 
endsnippet

priority 100
context "math()"
snippet V** "\dot V_{} ()" wA
\dot V_{${1:\delta}} (${2:a}) 
endsnippet

context "math()"
snippet VV "V_{} ()" wA
V_{${1:delta}} (${2:a}) 
endsnippet

context "math()"
snippet ~= "approx" wA
\approx 
endsnippet

context "math()"
snippet uu "U" wA
\cup 
endsnippet

context "math()"
snippet UU "U" wA
\bigcup_{$1}^{$2} 
endsnippet

context "math()"
snippet CA "cap" wA
\cap 
endsnippet

context "math()"
snippet Ca "big cap" wA
\bigcap_{$1}^{$2} 
endsnippet

context "math()"
snippet || "mid" wA
\mid 
endsnippet

context "math()"
snippet cc "subset" wA
\subset 
endsnippet

context "math()"
snippet ncc "not subset" wA
\not\subset 
endsnippet

context "math()"
snippet NN "Natural" wA
\mathbb N 
endsnippet

context "math()"
snippet ZZ "Integer" wA
\mathbb Z 
endsnippet

context "math()"
snippet QQ "Rational" wA
\mathbb Q 
endsnippet

context "math()"
snippet RR "Real" wA
\mathbb R 
endsnippet

context "math()"
snippet II "Irrational" wA
\mathbb I 
endsnippet

context "math()"
snippet CC "Complex" wA
\mathbb C 
endsnippet

context "math()"
snippet LL "Linear span" wA
\mathscr L (${VISUAL}$1) 
endsnippet

context "math()"
snippet scr "\mathscr" wA
\mathscr 
endsnippet

priority 100
context "math()"
snippet mset "set minus" wA
\setminus 
endsnippet

priority 10
context "math()"
snippet set "\{ ... \}" wA
\left\\{ ${VISUAL}$1 \right\\}
endsnippet

priority 100
context "math()"
snippet bset "big \{ ... \}" wA
\\Big\\{ ${VISUAL}$1 \Big\\}
endsnippet

context "math()"
snippet prl "parallel" wA
\parallel 
endsnippet

context "math()"
snippet oo "\infty" wA
\infty 
endsnippet

priority 10
context "math()"
snippet EE "exist" wA
\exists 
endsnippet

priority 100
context "math()"
snippet "\\not\s*EE" "does not exist" wrA
\nexists 
endsnippet

context "math()"
snippet AA "forall" wA
\forall 
endsnippet

priority 10
context "math()"
snippet "(?<!<)=>" "implies" wrA
\implies 
endsnippet

context "math()"
snippet "(?<!\\)impl" "implies" wrA
\implies 
endsnippet

context "math()" 
snippet "\\implies\s*def" "implies by definition" wrA
\overset{\!\!\text{\tiny def}}\implies 
endsnippet

priority 100
context "math()"
snippet "\\iff\s*def" "if and only iff (by definition)" wrA
\overset{\hspace{-1pt}\text{\tiny def}}\iff 
endsnippet

context "math()"
snippet "=\s*def" "equals by definition" wrA
\overset{\text{def}}= 
endsnippet

context "math()"
snippet != "not equals" wA
\neq 
endsnippet

context "math()"
snippet "(?<!\\)geq|>=" "less than or equals to" wrA
\geqslant 
endsnippet

context "math()"
snippet "(?<!\\)leq|<=" "greater than or equals to" wrA
\leqslant 
endsnippet

###############
# Oversymbols #
###############

priority 100
context "math()"
snippet "([\\A-Za-z'_^\d\.]+(?<!\\))bar" "bar" rwA
\overline{`!p snip.rv = match.group(1)`} 
endsnippet

priority 10
context "math()"
snippet "(?<!\\)bar" "bar" rwA
\overline{${VISUAL}$1} 
endsnippet

priority 100
context "math()"
snippet "([\\A-Za-z'_^\d\.]+(?<!\\))hat" "vector" rwA
\hat{`!p snip.rv = match.group(1)`} 
endsnippet

priority 10
context "math()"
snippet "(?<!\\)hat" "hat" rwA
\hat{${VISUAL}$1} 
endsnippet

priority 100
context "math()"
snippet "([\\A-Za-z'_^\d\.]+(?<!\\))vec" "vector" rwA
\overrightarrow{`!p snip.rv = match.group(1)`} 
endsnippet

priority 100
context "math()"
snippet "(?<!\\widetilde )(?<![\\A-Za-z])(\\?[A-Za-z]+\s?)~" "tilde" rwA
\tilde `!p snip.rv = match.group(1)`
endsnippet

priority 1000
context "math()"
snippet "\\tilde (\\?[A-Za-z]+\s?)~" "widetilde" rwA
\widetilde `!p snip.rv = match.group(1)`
endsnippet

priority 10
context "math()"
snippet ~~ "\widetilde" wA
\widetilde 
endsnippet

context "math()"
snippet .~ "\tilde" wA
\tilde 
endsnippet

context "math()"
snippet "([A-Z])cl" "\mathcal [A-Z]" rwA
\mathcal `!p snip.rv = match.group(1)`
endsnippet

priority 10
context "math()"
snippet "(?<!\\)vec" "vector" rwA
\overrightarrow{${VISUAL}$1} 
endsnippet

priority 10
context "math()"
snippet BB "Underbrace" wA
\underbrace{${VISUAL}$1}_{$2} 
endsnippet

priority 10
context "math()"
snippet '([\\A-Za-z'_^\d\.]+)\s*BB' "Underbrace" irA
\underbrace{`!p snip.rv = match.group(1)`}_{$1} 
endsnippet

priority 100
context "math()"
snippet '(^.*\))\s*BB' "() Underbrace" irA
`!p
stripped = match.group(1)
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	elif stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i -= 1
snip.rv = stripped[0:i] + "\\underbrace{" + stripped[i:] + "}"
`_{$1} $0
endsnippet

priority 1000
context "math() and snip.visual_text"
snippet BB "Visual underbrace" wA
\underbrace{${VISUAL}}_{$1} 
endsnippet

priority 10
context "math()"
snippet OO "Overset" wA
\overset{$1}_{$2}
endsnippet

priority 100
context "math()"
snippet '([\\A-Za-z'_^\d\.=]+)\s*OO' "Overset" irA
\overset{$1}{`!p snip.rv = match.group(1)`} 
endsnippet

priority 1000
context "math() and snip.visual_text"
snippet OO "Visual overset" wA
\overset{$1}{${VISUAL}} 
endsnippet

#############
# Operators #
#############

context "math()"
snippet '(?<!\\)(lg|ln|log|exp|deg|min|max|dim|ker)' "operators" rwA
\\`!p snip.rv = match.group(1)` 
endsnippet

context "math()"
snippet '(?<!\\)rk' "\operatorname{rk}" rwA
\operatorname{rk} 
endsnippet

context "math()"
snippet '(?<!\\)((arc)?(sin|cos|tan|cot|sec|csc))' "trigonometry" rwA
\\`!p snip.rv = match.group(1)` 
endsnippet

context "math()"
snippet '\\(sin|cos|tan|cot|sec|csc) h' "hyperbolic trigonometry" rwA
\\`!p snip.rv = match.group(1)`h 
endsnippet

#########
# Greek #
#########

context "math()"
snippet DD "Delta" wA
\Delta 
endsnippet

#####################
# Other expressions #
#####################

context "math()"
snippet Cnk "Binomial coefficient" wA
C_n^k 
endsnippet

context "math()"
snippet fun "a function" wA
${1:${2:D} \subset \mathbb R} \to ${3:\mathbb R} 
endsnippet

########
# Anki #
########

snippet note "Anki's note" b
\begin{note}{`!p 
from uuid import uuid4
if not snip.c:
	snip.rv = uuid4().hex
`}
	${VISUAL}$1
\end{note}
endsnippet

context "snip.visual_text"
snippet clz "Cloze deletion" wA
\begin{cloze}{${1:1}}
	${VISUAL}
\end{cloze}
endsnippet

snippet clz "Cloze deletion" wA
\begin{cloze}{${1:1}}
	$2
\end{cloze}
endsnippet

snippet iclz "Inline cloze deletion" wA
\begin{icloze}{${1:1}}$2\end{icloze}
endsnippet

context "snip.visual_text"
snippet iclz "Inline cloze deletion" wA
\begin{icloze}{${1:1}}${VISUAL}\end{icloze}
endsnippet
